{"version":3,"sources":["components/Header.js","components/Button.js","components/Address.js","components/Table.js","img/CoinGecckoLogo.png","components/Footer.js","components/Loading.js","App.js","reportWebVitals.js","index.js"],"names":["Header","title","className","href","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","style","fontSize","target","rel","defaultProps","Button","text","onClick","cname","Address","input","run","backgroundColor","onChange","id","placeholder","autocomplete","htmlFor","width","Table","columns","data","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","length","totalArray","forEach","reward","push","usdtotal","total","reduce","r","c","parseFloat","toFixed","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","i","getRowProps","cells","cell","getCellProps","caller","msg","duration","styler","document","createElement","setAttribute","innerHTML","setTimeout","parentNode","removeChild","body","appendChild","customAlert","Footer","color","navigator","clipboard","writeText","src","logo","alt","height","LoadingSpinner","role","App","useState","rewards","setRewards","address","setAddress","loading","setLoading","account","setAccount","error","setError","React","useMemo","accessor","accountInfo","key","url","a","connection","solanaWeb3","getParsedAccountInfo","inflationReward","epoch","rewardEpoch","parseInt","getInflationReward","blockTime","slot","unix","getBlockTime","currentEpoch","getEpochInfo","convertUnixTime","dateObject","Date","timeZone","timeZoneName","day","getUTCDate","digit2day","month","getUTCMonth","getUTCFullYear","getSolUSDPrice","time","require","stakeRewards","value","program","activationEpoch","parsed","info","stake","delegation","nowEpoch","epochReward","amount","amountfixed","effectiveSlot","dtg","epochRewards","date","usd","totalusd","err","console","log","handleInput","event","getStakeRewards","displayRewards","userRewards","getRewards","csvReport","filename","label","includes","Loading","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c6e6d4fb.chunk.js","sourcesContent":["import propTypes from \"prop-types\";\n\nconst Header = ({ title }) => {\n  return (\n    <header>\n      <nav className=\"navbar navbar-expand-md navbar-dark bg-dark\">\n        <div className=\"col-md-3\">\n          <div className=\"container-fluid\">\n            <a\n              className=\"navbar-brand fs-4 fw-bold ps-5\"\n              href=\"https://tax.legends.llc\"\n            >\n              {title}\n            </a>\n            <button\n              className=\"navbar-toggler\"\n              type=\"button\"\n              data-bs-toggle=\"collapse\"\n              data-bs-target=\"#navbarCollapse\"\n              aria-controls=\"navbarCollapse\"\n              aria-expanded=\"false\"\n              aria-label=\"Toggle navigation\"\n            >\n              <span className=\"navbar-toggler-icon\"></span>\n            </button>\n          </div>\n          <div className=\"container-fluid text-end pe-5\">\n            <a\n              className=\"fw-lighter pe-5\"\n              style={{ fontSize: \"small\" }}\n              href=\"https://solanabeach.io/validator/6W8yrMwtDU5G6ErazhZHfLjqZV8cMvajpSRGYgrZ3d4v\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              by Legends Validator\n            </a>\n          </div>\n        </div>\n      </nav>\n    </header>\n  );\n};\n\nHeader.defaultProps = {\n  title: \"Solana Stake Reward Tracker \",\n};\n\nHeader.propTypes = {\n  title: propTypes.string.isRequired,\n};\n\nexport default Header;\n","import propTypes from \"prop-types\";\n\nconst Button = ({ text, onClick, cname }) => {\n  return (\n    <button className={cname} onClick={onClick}>\n      {text}\n    </button>\n  );\n};\n\nButton.propTypes = {\n  text: propTypes.string,\n  onClick: propTypes.func,\n};\n\nexport default Button;\n","import Button from \"./Button\";\nimport \"../css/custom.css\";\n\nconst Address = ({ input, run }) => {\n  return (\n    <section className=\"pt-5\">\n      <div className=\"col-md-4 ms-5\">\n        <div\n          className=\"form-outline mb-3\"\n          style={{ backgroundColor: \"bs-dark\" }}\n        >\n          <div className=\"input-group\">\n            <input\n              className=\"input form-control active\"\n              onChange={input}\n              id=\"address\"\n              placeholder=\"Enter Solana Stake Account...\"\n              type=\"text\"\n              autocomplete=\"off\"\n            ></input>\n            <label className=\"form-label\" htmlFor=\"address\">\n              Stake Address\n            </label>\n            <div className=\"form-notch\">\n              <div\n                className=\"form-notch-leading\"\n                style={{ width: \"9px\" }}\n              ></div>\n              <div\n                className=\"form-notch-middle\"\n                style={{ width: \"88.8px\" }}\n              ></div>\n              <div className=\"form-notch-trailing\"></div>\n            </div>\n            <span className=\"input-group-btn\">\n              <Button\n                cname=\"btn btn-light padding\"\n                text=\"Submit\"\n                onClick={run}\n              />\n            </span>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Address;\n","import React from \"react\";\nimport { useTable } from \"react-table\";\n\nconst Table = ({ columns, data }) => {\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\n    useTable({\n      columns,\n      data,\n    });\n\n  if (data.length === 0) {\n    return <></>;\n  }\n\n  const totalArray = [];\n  data.forEach((reward) => totalArray.push(reward.usdtotal));\n  const total = totalArray.reduce((r, c) => r + parseFloat(c), 0);\n\n  return (\n    <div className=\"container-fluid\">\n      <table className=\"table table-striped\" {...getTableProps()}>\n        <caption className=\"caption-top text-end fs-2 fw-bold\">\n          Income Total: ${total.toFixed(2)}\n        </caption>\n        <thead>\n          {headerGroups.map((headerGroup) => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {rows.map((row, i) => {\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map((cell) => {\n                  return (\n                    <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Table;\n","export default __webpack_public_path__ + \"static/media/CoinGecckoLogo.23a707f9.png\";","import React from \"react\";\nimport Button from \"./Button\";\nimport logo from \"../img/CoinGecckoLogo.png\";\n\nfunction customAlert(msg, duration) {\n  const styler = document.createElement(\"div\");\n  styler.setAttribute(\"role\", \"alert\");\n  styler.setAttribute(\"class\", \"alert alert-dark fade show\");\n  styler.setAttribute(\n    \"style\",\n    \"position: absolute; top: 0; right: 0; width: 175px; height: 50px; text-align:right;\"\n  );\n  styler.innerHTML = \"<p>\" + msg + \"</p>\";\n  setTimeout(function () {\n    styler.parentNode.removeChild(styler);\n  }, duration);\n  document.body.appendChild(styler);\n}\nfunction caller() {\n  customAlert(\"Copied to clipboard\", \"2000\");\n}\n\nconst Footer = () => {\n  const copyclip = () => {\n    const vote = \"6W8yrMwtDU5G6ErazhZHfLjqZV8cMvajpSRGYgrZ3d4v\";\n    navigator.clipboard.writeText(vote);\n    caller();\n  };\n\n  return (\n    <footer className=\"footer mt-auto py-3 bg-dark fixed-bottom\">\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-md-8 text-start text-muted\">\n            Support this project by staking with Legends\n            <span className=\"pe-2\" id=\"vote\" style={{ color: \"DodgerBlue\" }}>\n              {\" \"}\n              6W8yrMwtDU5G6ErazhZHfLjqZV8cMvajpSRGYgrZ3d4v\n            </span>\n            <Button\n              cname=\"btn btn-outline-light btn-sm padding\"\n              text=\"Copy\"\n              onClick={copyclip}\n            />\n          </div>\n\n          <div className=\"col text-end\">\n            <span className=\"text-muted\">\n              <a\n                className=\"mr-5\"\n                href=\"https://www.coingecko.com/en\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                Powered by CoinGecko\n              </a>\n              <img src={logo} alt=\"\" width=\"30\" height=\"30\" />\n            </span>\n          </div>\n        </div>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\n\nconst LoadingSpinner = () => {\n  return (\n    <section className=\"position-absolute top-50 start-50 translate-middle\">\n      <div className=\"d-flex flex-column align-items-center\">\n        <strong className=\"pb-5\">\n          Fetching stake rewards. This might take some time.\n        </strong>\n        <div\n          className=\"spinner-border text-light mx-2 d-flex flex-column justify-content-center\"\n          role=\"status\"\n          style={{ width: \"5rem\", height: \"5rem\" }}\n        ></div>\n      </div>\n    </section>\n  );\n};\nexport default LoadingSpinner;\n","import React from \"react\";\nimport { useState } from \"react\";\nimport { CSVLink } from \"react-csv\";\nimport Header from \"./components/Header\";\nimport Address from \"./components/Address\";\nimport Table from \"./components/Table\";\nimport Footer from \"./components/Footer\";\nimport * as solanaWeb3 from \"@solana/web3.js\";\n\nimport \"./css/mdb.dark.min.css\";\nimport LoadingSpinner from \"./components/Loading\";\n\nconst App = () => {\n  const [rewards, setRewards] = useState([]);\n  const [address, setAddress] = useState(\"\");\n  const [loading, setLoading] = useState();\n  const [account, setAccount] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: \"Epoch\",\n        accessor: \"epoch\",\n      },\n      {\n        Header: \"Amount SOL\",\n        accessor: \"amount\",\n      },\n      {\n        Header: \"Date Awarded\",\n        accessor: \"date\",\n      },\n      {\n        Header: \"SOL USD Price\",\n        accessor: \"usd\",\n      },\n      {\n        Header: \"USD Total\",\n        accessor: \"usdtotal\",\n      },\n    ],\n    []\n  );\n\n  /*const data = React.useMemo(\n    () => [\n      {\n        epoch: 200,\n        amount: 10,\n        time: \"10/01/2021\",\n      },\n      {\n        epoch: 201,\n        amount: 11,\n        time: \"10/03/2021\",\n      },\n      {\n        epoch: 202,\n        amount: 12,\n        time: \"10/05/2021\",\n      },\n    ],\n    []\n  );*/\n\n  async function accountInfo(key, url) {\n    const connection = new solanaWeb3.Connection(url);\n    let accountInfo = connection.getParsedAccountInfo(\n      new solanaWeb3.PublicKey(key)\n    );\n    return await accountInfo;\n  }\n\n  async function inflationReward(key, url, epoch) {\n    const connection = new solanaWeb3.Connection(url);\n    let rewardEpoch = parseInt(epoch);\n    let reward = connection.getInflationReward(\n      [new solanaWeb3.PublicKey(key)],\n      rewardEpoch\n    );\n    return await reward;\n  }\n\n  async function blockTime(url, slot) {\n    const connection = new solanaWeb3.Connection(url);\n    let unix = connection.getBlockTime(slot);\n    return await unix;\n  }\n\n  async function currentEpoch(url) {\n    const connection = new solanaWeb3.Connection(url);\n    let currentEpoch = connection.getEpochInfo();\n    return await currentEpoch;\n  }\n\n  function convertUnixTime(unix) {\n    let milliseconds = unix * 1000;\n    let dateObject = new Date(milliseconds);\n    dateObject.timeZone = \"UTC\";\n    dateObject.timeZoneName = \"short\";\n    let day = dateObject.getUTCDate();\n    let digit2day = (day < 10 ? \"0\" : \"\") + day;\n    let month = dateObject.getUTCMonth() + 1;\n    let digit2month = (month < 10 ? \"0\" : \"\") + month;\n    let year = dateObject.getUTCFullYear();\n    let formattedTime = digit2day + \"-\" + digit2month + \"-\" + year;\n    return formattedTime;\n  }\n\n  function getSolUSDPrice(time) {\n    const priceData = require(\"./sol_price.json\");\n    const usd = priceData[time].toFixed(2);\n    return usd;\n  }\n\n  const stakeRewards = async () => {\n    try {\n      let key = address;\n      if (!address) {\n        let stakeRewards = [];\n        return stakeRewards;\n      }\n      let url = \"https://api.mainnet-beta.solana.com\";\n      let data = await accountInfo(key, url);\n      let accountType = data.value.data.program;\n      if (!accountType) {\n        let stakeRewards = [];\n        setAccount(\"nonstake\");\n        return stakeRewards;\n      }\n      let activationEpoch =\n        data.value.data.parsed.info.stake.delegation.activationEpoch;\n      activationEpoch++;\n      let nowEpoch = await currentEpoch(url);\n      let epoch = nowEpoch.epoch;\n      let stakeRewards = [];\n      while (activationEpoch < epoch) {\n        let epochReward = await inflationReward(key, url, activationEpoch);\n        let amount = epochReward[0].amount / 1000000000;\n        let amountfixed = amount.toFixed(9);\n        let slot = epochReward[0].effectiveSlot;\n        let dtg = await blockTime(url, slot);\n        let time = convertUnixTime(dtg);\n        let epochRewards = {};\n        epochRewards.epoch = activationEpoch;\n        epochRewards.amount = amountfixed;\n        epochRewards.date = time;\n        try {\n          epochRewards.usd = getSolUSDPrice(time);\n          let totalusd = epochRewards.amount * epochRewards.usd;\n          epochRewards.usdtotal = totalusd.toFixed(2);\n        } catch (err) {\n          epochRewards.usd = \"unknown\";\n          epochRewards.usdtotal = \"unknown\";\n        }\n        console.log(epochRewards);\n        stakeRewards.push(epochRewards);\n        activationEpoch++;\n      }\n      return stakeRewards;\n    } catch (err) {\n      let stakeRewards = [];\n      setError(\"error\");\n      console.log(err);\n      return stakeRewards;\n    }\n  };\n\n  const handleInput = (event) => {\n    setAddress(event.target.value);\n  };\n\n  const getStakeRewards = () => {\n    setLoading(true);\n    setRewards([]);\n    setError(\"\");\n    setAccount(\"\");\n    displayRewards();\n  };\n\n  const displayRewards = () => {\n    const getRewards = async () => {\n      const userRewards = await stakeRewards();\n      setRewards(userRewards);\n      setLoading(false);\n    };\n    getRewards();\n  };\n\n  const headers = [\n    {\n      label: \"Epoch\",\n      key: \"epoch\",\n    },\n    {\n      label: \"Amount SOL\",\n      key: \"amount\",\n    },\n    {\n      label: \"Date Awarded\",\n      key: \"date\",\n    },\n    {\n      label: \"SOL USD Price\",\n      key: \"usd\",\n    },\n    {\n      label: \"USD Total\",\n      key: \"usdtotal\",\n    },\n  ];\n\n  const csvReport = {\n    filename: \"stake_rewards.csv\",\n    headers: headers,\n    data: rewards,\n  };\n\n  if (rewards.length === 0 && error.includes(\"error\")) {\n    return (\n      <div className=\"App\">\n        <body className=\"d-flex flex-column min-vh-100\">\n          <Header />\n          <Address input={handleInput} run={getStakeRewards} />\n\n          <p className=\"position-absolute top-50 start-50 translate-middle fs-3 fw-bold\">\n            Failed to load staking data. Please try again.\n          </p>\n          <Footer />\n        </body>\n      </div>\n    );\n  }\n\n  if (rewards.length === 0 && account.includes(\"nonstake\")) {\n    return (\n      <div className=\"App\">\n        <body className=\"d-flex flex-column min-vh-100\">\n          <Header />\n          <Address input={handleInput} run={getStakeRewards} />\n\n          <p className=\"position-absolute top-50 start-50 translate-middle fs-3 fw-bold\">\n            Account is not a staking account.\n          </p>\n          <Footer />\n        </body>\n      </div>\n    );\n  }\n\n  if (rewards.length === 0) {\n    return (\n      <div className=\"App\">\n        <body className=\"d-flex flex-column min-vh-100\">\n          <Header />\n          <Address input={handleInput} run={getStakeRewards} />\n\n          {loading ? (\n            <LoadingSpinner />\n          ) : (\n            <Table columns={columns} data={rewards} />\n          )}\n          <Footer />\n        </body>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <Address input={handleInput} run={getStakeRewards} />\n\n      {loading ? (\n        <LoadingSpinner />\n      ) : (\n        <Table columns={columns} data={rewards} />\n      )}\n      <CSVLink className=\"col-sm-1 btn btn-light ms-5 mb-5\" {...csvReport}>\n        Export to CSV\n      </CSVLink>\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}